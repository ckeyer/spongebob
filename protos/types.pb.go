// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Node struct {
	Info *NodeInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Node) GetInfo() *NodeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type Task struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NodeStatus struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *NodeStatus) Reset()                    { *m = NodeStatus{} }
func (m *NodeStatus) String() string            { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()               {}
func (*NodeStatus) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *NodeStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NodeInfo struct {
	Hostname   string   `protobuf:"bytes,1,opt,name=Hostname" json:"Hostname,omitempty"`
	Ips        []string `protobuf:"bytes,2,rep,name=Ips" json:"Ips,omitempty"`
	MemoryUsed int64    `protobuf:"varint,3,opt,name=MemoryUsed" json:"MemoryUsed,omitempty"`
	Memory     int64    `protobuf:"varint,4,opt,name=Memory" json:"Memory,omitempty"`
	CpuUsed    float32  `protobuf:"fixed32,5,opt,name=CpuUsed" json:"CpuUsed,omitempty"`
	NumCpus    int64    `protobuf:"varint,6,opt,name=NumCpus" json:"NumCpus,omitempty"`
	NumPhyCpus int64    `protobuf:"varint,7,opt,name=NumPhyCpus" json:"NumPhyCpus,omitempty"`
	LoadAvg    float32  `protobuf:"fixed32,8,opt,name=LoadAvg" json:"LoadAvg,omitempty"`
	Uptime     string   `protobuf:"bytes,9,opt,name=Uptime" json:"Uptime,omitempty"`
	UnixTime   int64    `protobuf:"varint,10,opt,name=UnixTime" json:"UnixTime,omitempty"`
}

func (m *NodeInfo) Reset()                    { *m = NodeInfo{} }
func (m *NodeInfo) String() string            { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()               {}
func (*NodeInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *NodeInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *NodeInfo) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

func (m *NodeInfo) GetMemoryUsed() int64 {
	if m != nil {
		return m.MemoryUsed
	}
	return 0
}

func (m *NodeInfo) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *NodeInfo) GetCpuUsed() float32 {
	if m != nil {
		return m.CpuUsed
	}
	return 0
}

func (m *NodeInfo) GetNumCpus() int64 {
	if m != nil {
		return m.NumCpus
	}
	return 0
}

func (m *NodeInfo) GetNumPhyCpus() int64 {
	if m != nil {
		return m.NumPhyCpus
	}
	return 0
}

func (m *NodeInfo) GetLoadAvg() float32 {
	if m != nil {
		return m.LoadAvg
	}
	return 0
}

func (m *NodeInfo) GetUptime() string {
	if m != nil {
		return m.Uptime
	}
	return ""
}

func (m *NodeInfo) GetUnixTime() int64 {
	if m != nil {
		return m.UnixTime
	}
	return 0
}

func init() {
	proto.RegisterType((*Node)(nil), "ckeyer.com.spongebob.protos.Node")
	proto.RegisterType((*Task)(nil), "ckeyer.com.spongebob.protos.Task")
	proto.RegisterType((*NodeStatus)(nil), "ckeyer.com.spongebob.protos.NodeStatus")
	proto.RegisterType((*NodeInfo)(nil), "ckeyer.com.spongebob.protos.NodeInfo")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0x26, 0xb4, 0xe9, 0x75, 0x41, 0x1e, 0x90, 0x55, 0x10, 0x8a, 0x2a, 0x21, 0x65,
	0x4a, 0x25, 0x98, 0x18, 0x4b, 0x17, 0x2a, 0x41, 0x85, 0x42, 0xbb, 0xb0, 0xb9, 0xad, 0x1b, 0xa2,
	0x62, 0x9f, 0x15, 0x3b, 0x88, 0xfc, 0x0d, 0x7e, 0x31, 0xb2, 0x9d, 0x94, 0x0e, 0x88, 0x29, 0xf7,
	0xdd, 0xbb, 0xf7, 0x2e, 0x67, 0x18, 0x99, 0x46, 0x71, 0x9d, 0xa9, 0x0a, 0x0d, 0x92, 0xcb, 0xed,
	0x81, 0x37, 0xbc, 0xca, 0xb6, 0x28, 0x32, 0xad, 0x50, 0x16, 0x7c, 0x83, 0x1b, 0xaf, 0xe9, 0xf1,
	0x55, 0x81, 0x58, 0x7c, 0xf0, 0x29, 0x53, 0xe5, 0x94, 0x49, 0x89, 0x86, 0x99, 0x12, 0x65, 0x6b,
	0x9d, 0xcc, 0x20, 0x5a, 0xe2, 0x8e, 0x93, 0x7b, 0x88, 0x4a, 0xb9, 0x47, 0x1a, 0x24, 0x41, 0x3a,
	0xba, 0xbd, 0xc9, 0xfe, 0x49, 0xcc, 0xac, 0x61, 0x21, 0xf7, 0x98, 0x3b, 0xcb, 0x64, 0x0c, 0xd1,
	0x8a, 0xe9, 0x03, 0x21, 0x10, 0x49, 0x26, 0xb8, 0x8b, 0x18, 0xe6, 0xae, 0x9e, 0x24, 0x00, 0x76,
	0xfa, 0xd5, 0x30, 0x53, 0xeb, 0x3f, 0x27, 0xbe, 0x7b, 0x10, 0x77, 0x81, 0x64, 0x0c, 0xf1, 0x23,
	0x6a, 0x73, 0x32, 0x74, 0x64, 0x72, 0x0e, 0xe1, 0x42, 0x69, 0xda, 0x4b, 0xc2, 0x74, 0x98, 0xdb,
	0x92, 0x5c, 0x03, 0x3c, 0x73, 0x81, 0x55, 0xb3, 0xd6, 0x7c, 0x47, 0xc3, 0x24, 0x48, 0xc3, 0xfc,
	0xa4, 0x43, 0x2e, 0xa0, 0xef, 0x89, 0x46, 0x4e, 0x6b, 0x89, 0x50, 0x18, 0xcc, 0x55, 0xed, 0x4c,
	0x67, 0x49, 0x90, 0xf6, 0xf2, 0x0e, 0xad, 0xb2, 0xac, 0xc5, 0x5c, 0xd5, 0x9a, 0xf6, 0x9d, 0xa5,
	0x43, 0xbb, 0x6b, 0x59, 0x8b, 0x97, 0xf7, 0xc6, 0x89, 0x03, 0xbf, 0xeb, 0xb7, 0x63, 0x9d, 0x4f,
	0xc8, 0x76, 0xb3, 0xcf, 0x82, 0xc6, 0x3e, 0xb3, 0x45, 0xfb, 0x17, 0x6b, 0x65, 0x4a, 0xc1, 0xe9,
	0xd0, 0x5d, 0xd4, 0x92, 0xbd, 0x75, 0x2d, 0xcb, 0xaf, 0x95, 0x55, 0xc0, 0xe5, 0x1d, 0xf9, 0x21,
	0x7e, 0xeb, 0xfb, 0xb7, 0xde, 0xf8, 0xef, 0xdd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x19,
	0x31, 0xf1, 0xf0, 0x01, 0x00, 0x00,
}
